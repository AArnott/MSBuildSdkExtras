<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <DefaultLanguage Condition="'$(DefaultLanguage)' == ''">en-US</DefaultLanguage>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.csproj'">
    <_LangTargetsType>CSharp</_LangTargetsType>
    <_ExtrasDefaultLangSourceExt>.cs</_ExtrasDefaultLangSourceExt>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(MSBuildProjectExtension)' == '.vbproj'">
    <_LangTargetsType>VisualBasic</_LangTargetsType>
    <_ExtrasDefaultLangSourceExt>.vb</_ExtrasDefaultLangSourceExt>
  </PropertyGroup>

  <!-- Split $(TargetFramework) (e.g. net45) into short identifier and short version (e.g. 'net' and '45'). -->
  <PropertyGroup Condition="'$(TargetFramework)' != '' and !$(TargetFramework.Contains(',')) and !$(TargetFramework.Contains('+'))">
    <_ExtrasShortFrameworkIdentifier>$(TargetFramework.TrimEnd('.0123456789'))</_ExtrasShortFrameworkIdentifier>
    <_ExtrasShortFrameworkVersion>$(TargetFramework.Substring($(_ExtrasShortFrameworkIdentifier.Length)))</_ExtrasShortFrameworkVersion>
  </PropertyGroup>

  <!-- Map short name to long name. See earlier comment for example of how to work with identifiers that are not recognized here. -->
  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == ''">
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'sl'">Silverlight</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'wp'">WindowsPhone</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'wpa'">WindowsPhoneApp</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'win'">.NETCore</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'uap'">.NETCore</TargetFrameworkIdentifier>
    
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarinios'">Xamarin.iOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarin.ios'">Xamarin.iOS</TargetFrameworkIdentifier>
    
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'monoandroid'">MonoAndroid</TargetFrameworkIdentifier>

    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarintvos'">Xamarin.TVOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarin.tvos'">Xamarin.TVOS</TargetFrameworkIdentifier>
    
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarinwatchos'">Xamarin.WatchOS</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarin.watchos'">Xamarin.WatchOS</TargetFrameworkIdentifier>
    
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarinmac'">Xamarin.Mac</TargetFrameworkIdentifier>
    <TargetFrameworkIdentifier Condition="'$(_ExtrasShortFrameworkIdentifier)' == 'xamarin.mac'">Xamarin.Mac</TargetFrameworkIdentifier>

  </PropertyGroup>

  <!-- Versions with dots are taken as is and just given leading 'v'. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ShortFrameworkVersion)' != '' and $(_ShortFrameworkVersion.Contains('.'))">
    <TargetFrameworkVersion>v$(_ExtrasShortFrameworkVersion)</TargetFrameworkVersion>
  </PropertyGroup>

  <!-- Versions with no dots and up to 3 characters get leading 'v' and implicit dots between characters. -->
  <PropertyGroup Condition="'$(TargetFrameworkVersion)' == '' and '$(_ExtrasShortFrameworkVersion)' != ''">
    <TargetFrameworkVersion Condition="$(_ExtrasShortFrameworkVersion.Length) == 1">v$(_ExtrasShortFrameworkVersion[0]).0</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ExtrasShortFrameworkVersion.Length) == 2">v$(_ExtrasShortFrameworkVersion[0]).$(_ExtrasShortFrameworkVersion[1])</TargetFrameworkVersion>
    <TargetFrameworkVersion Condition="$(_ExtrasShortFrameworkVersion.Length) == 3">v$(_ExtrasShortFrameworkVersion[0]).$(_ExtrasShortFrameworkVersion[1]).$(_ExtrasShortFrameworkVersion[2])</TargetFrameworkVersion>
  </PropertyGroup>

  <PropertyGroup>

    <Configuration Condition="'$(Configuration)'==''">Debug</Configuration>
    <Platform Condition="'$(Platform)'==''">AnyCPU</Platform>
    <PlatformName Condition="'$(PlatformName)' == ''">$(Platform)</PlatformName>

    <BaseOutputPath Condition="'$(BaseOutputPath)' == ''">bin\</BaseOutputPath>
    <BaseOutputPath Condition="!HasTrailingSlash('$(BaseOutputPath)')">$(BaseOutputPath)\</BaseOutputPath>
    <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' == 'AnyCPU'">$(BaseOutputPath)$(Configuration)\</OutputPath>
    <OutputPath Condition="'$(OutputPath)' == '' and '$(PlatformName)' != 'AnyCPU'">$(BaseOutputPath)$(PlatformName)\$(Configuration)\</OutputPath>
    <OutputPath Condition="!HasTrailingSlash('$(OutputPath)')">$(OutputPath)\</OutputPath>

    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == ''">obj\</BaseIntermediateOutputPath>
    <BaseIntermediateOutputPath Condition="!HasTrailingSlash('$(BaseIntermediateOutputPath)')">$(BaseIntermediateOutputPath)\</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' == 'AnyCPU' ">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition=" $(IntermediateOutputPath) == '' and '$(PlatformName)' != 'AnyCPU' ">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition="!HasTrailingSlash('$(IntermediateOutputPath)')">$(IntermediateOutputPath)\</IntermediateOutputPath>
  </PropertyGroup>

  <Import Project="$(MSBuildThisFileDirectory)..\platforms\*.targets"/>
</Project>
